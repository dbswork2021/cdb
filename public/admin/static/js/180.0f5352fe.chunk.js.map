{"version":3,"file":"static/js/180.0f5352fe.chunk.js","mappings":"uIAiBA,UAda,WAOZ,OALAA,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,MAAeC,MAAK,SAACC,SAGpB,KAED,yC,+wBCRIC,EAAOC,IAAAA,OAAa,CACxBC,QAASC,aACTC,iBAAiB,IAGnBJ,EAAKK,aAAaC,QAAQC,KACxB,SAACC,GAOC,OANIC,aAAaC,gBACfF,EAAOG,QAAQC,cAAgB,UAAYH,aAAaC,eAEtDD,aAAaI,aACfL,EAAOG,QAAQ,mBAAqBF,aAAaI,YAE5CL,KAET,SAACM,GACC,OAAOC,QAAQC,OAAOF,MAI1Bd,EAAKK,aAAaY,SAASV,KACzB,SAACR,GAIC,OAHIA,EAAImB,KAAKC,SACXA,EAAAA,GAAAA,QAAgBpB,EAAImB,KAAKC,SAEpBpB,KAET,SAACe,GAcC,OAX4B,MAAxBA,EAAIG,SAASG,SACfX,aAAaY,WAAW,kBAGyB,IAA/CC,OAAOC,SAASC,SAASC,QAAQ,WACc,IAAlDH,OAAOC,SAASC,SAASC,QAAQ,cAE9BH,OAAOC,SAASG,KAAO,WAIvBZ,EAAIG,SAASC,MACfC,EAAAA,GAAAA,MAAcL,EAAIG,SAASC,KAAKC,SACzBJ,QAAQC,OAAOF,IAEjBC,QAAQC,OAAOF,MAI1B,QCjDaa,EAAW,SAACC,GAAD,OAAW5B,EAAAA,KAAU,SAAU4B,IAC1CC,EAAc,SAACD,GAAD,OAAW5B,EAAAA,KAAU,YAAa4B,IAChDE,EAAa,kBAAM9B,EAAAA,IAAS,uBAE5BH,EAAe,kBAAMG,EAAAA,IAAS,oBAE9B+B,EAAc,kBAAM/B,EAAAA,IAAS,eAC7BgC,EAAa,SAACC,GAAD,OAAQjC,EAAAA,IAAS,cAAgBiC,IAC9CC,EAAc,SAACN,GAAD,OAAW5B,EAAAA,KAAU,aAAc4B,IAEjDO,EAAW,kBAAMnC,EAAAA,IAAS,gBAC1BoC,EAAe,SAACR,GAAD,OAAW5B,EAAAA,KAAU,cAAe4B,IACnDS,EAAc,SAACJ,GAAD,OAAQjC,EAAAA,OAAY,eAAiBiC,IAEnDK,EAAa,kBAAMtC,EAAAA,IAAS,iBAC5BuC,EAAiB,SAACX,GAAD,OAAW5B,EAAAA,KAAU,eAAgB4B,IACtDY,EAAgB,SAACP,GAAD,OAAQjC,EAAAA,OAAY,gBAAkBiC,IAEtDQ,EAAU,kBAAMzC,EAAAA,IAAS,eACzB0C,EAAc,SAACd,GAAD,OAAW5B,EAAAA,KAAU,aAAc4B,IACjDe,EAAa,SAACV,GAAD,OAAQjC,EAAAA,OAAY,cAAgBiC,IAEjDW,EAAW,kBAAM5C,EAAAA,IAAS,gBAC1B6C,EAAe,SAACjB,GAAD,OAAW5B,EAAAA,KAAU,cAAe4B,IAEnDkB,EAAY,kBAAM9C,EAAAA,IAAS,iBAC3B+C,EAAgB,SAACnB,GAAD,OAAW5B,EAAAA,KAAU,eAAgB4B,IAErDoB,EAAW,kBAAMhD,EAAAA,IAAS,gBAC1BiD,EAAe,SAACrB,GAAD,OAAW5B,EAAAA,KAAU,cAAe4B,IAEnDsB,EAAa,kBAAMlD,EAAAA,IAAS,aAC5BmD,EAAiB,SAACvB,GAAD,OAAW5B,EAAAA,KAAU,WAAY4B,IAClDwB,EAAgB,SAACnB,GAAD,OAAQjC,EAAAA,OAAY,YAAciC,IAElDoB,EAAY,kBAAMrD,EAAAA,IAAS,oBAE3BsD,EAAe,kBAAMtD,EAAAA,IAAS,qBAC9BuD,EAAa,kBAAMvD,EAAAA,IAAS,mBAE5BwD,EAAS,SAACC,GAAD,OAAUzD,EAAAA,IAAS,QAAUyD,IACtCC,EAAa,SAAC9B,GAAD,OAAW5B,EAAAA,KAAU,OAAQ4B","sources":["pages/Home.jsx","utils/http.js","utils/Api.js"],"sourcesContent":["import { useEffect } from 'react'\nimport {DashBoardApi} from 'utils/Api'\n\nconst Home = () => {\n\n\tuseEffect(() => {\n\t\tDashBoardApi().then((res) => {\n\n\t\t})\n\t},[])\n\treturn (\n\t\t<div>\n\t\t\tdashboard\n\t\t</div>\n\t)\n}\n\nexport default Home\n\n\n\n\n\n","import Axios from 'axios';\nimport { message } from 'antd';\n\nconst http = Axios.create({\n  baseURL: process.env.REACT_APP_API_SERVER,\n  withCredentials: true,\n});\n\nhttp.interceptors.request.use(\n  (config) => {\n    if (localStorage.__admin_token) {\n      config.headers.Authorization = 'Bearer ' + localStorage.__admin_token;\n    }\n    if (localStorage.i18nextLng) {\n      config.headers['Accept-Language'] = localStorage.i18nextLng;\n    }\n    return config;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\nhttp.interceptors.response.use(\n  (res) => {\n    if (res.data.message) {\n      message.success(res.data.message);\n    }\n    return res;\n  },\n  (err) => {\n\t\t\n\t\t\n    if (err.response.status === 401) {\n      localStorage.removeItem('__admin_token');\n\t\t\t\n      if (\n        window.location.pathname.indexOf('login') === -1 && \n\t\t\t\t\twindow.location.pathname.indexOf('register') === -1\n\t\t\t) {\n        window.location.hash = '/login';\n      }\n    }\n\n    if (err.response.data) {\n      message.error(err.response.data.message);\n      return Promise.reject(err);\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default http;\n","import http from './http'\n\n\nexport const LoginApi = (model) => http.post('/login', model)\nexport const RegisterApi = (model) => http.post('/register', model)\nexport const CaptchaApi = () => http.get('/../common/captcha')\n\nexport const DashBoardApi = () => http.get('/info/dashboard')\n\nexport const UserListApi = () => http.get('/user/list')\nexport const UserBanApi = (id) => http.get('/user/user/' + id)\nexport const UserEditApi = (model) => http.post('/user/user', model)\n\nexport const AdminApi = () => http.get('/user/admin')\nexport const AdminSaveApi = (model) => http.post('/user/admin', model)\nexport const AdminDelApi = (id) => http.delete('/user/admin/' + id)\n\nexport const RostateApi = () => http.get('/info/rotate')\nexport const RostateSaveApi = (model) => http.post('/info/rotate', model)\nexport const RostateDelApi = (id) => http.delete('/info/rotate/' + id)\n\nexport const PostApi = () => http.get('/info/post')\nexport const PostSaveApi = (model) => http.post('/info/post', model)\nexport const PostDelApi = (id) => http.delete('/info/post/' + id)\n\nexport const AboutApi = () => http.get('/info/about')\nexport const AboutSaveApi = (model) => http.post('/info/about', model)\n\nexport const CenterApi = () => http.get('/info/center')\nexport const CenterSaveApi = (model) => http.post('/info/center', model)\n\nexport const ShareApi = () => http.get('/info/share')\nexport const ShareSaveApi = (model) => http.post('/info/share', model)\n\nexport const ProductApi = () => http.get('/product')\nexport const ProductSaveApi = (model) => http.post('/product', model)\nexport const ProductDelApi = (id) => http.delete('/product/' + id)\n\nexport const RecordApi = () => http.get('/product/record')\n\nexport const FinancialApi = () => http.get('/price/financial')\nexport const RechageApi = () => http.get('/price/rechage')\n\nexport const SetApi = (type) => http.get('/set/' + type)\nexport const SetSaveApi = (model) => http.post('/set', model)\n\n"],"names":["useEffect","DashBoardApi","then","res","http","Axios","baseURL","process","withCredentials","interceptors","request","use","config","localStorage","__admin_token","headers","Authorization","i18nextLng","err","Promise","reject","response","data","message","status","removeItem","window","location","pathname","indexOf","hash","LoginApi","model","RegisterApi","CaptchaApi","UserListApi","UserBanApi","id","UserEditApi","AdminApi","AdminSaveApi","AdminDelApi","RostateApi","RostateSaveApi","RostateDelApi","PostApi","PostSaveApi","PostDelApi","AboutApi","AboutSaveApi","CenterApi","CenterSaveApi","ShareApi","ShareSaveApi","ProductApi","ProductSaveApi","ProductDelApi","RecordApi","FinancialApi","RechageApi","SetApi","type","SetSaveApi"],"sourceRoot":""}