{"version":3,"file":"static/js/343.95e381a1.chunk.js","mappings":"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","sources":["pages/Financial.jsx","utils/http.js","utils/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { FinancialApi } from 'utils/Api';\nimport { Table } from 'antd';\nconst { Column } = Table;\n\nconst Financial = () => {\n  const [tableData, setTableData] = useState();\n\n  useEffect(() => {\n    FinancialApi().then((res) => {\n      setTableData(\n        res.data.map((item) => ({\n          ...item,\n          id: item._id,\n          _id: item._id.slice(0, 7),\n          createdAt: item.createdAt\n            .replace(/[TZ]/g, ' ')\n            .substr(0, item.createdAt.length - 5),\n        }))\n      );\n    });\n  }, []);\n\n  return (\n    <Table dataSource={tableData} rowKey=\"id\">\n      <Column\n        title=\"会员编号\"\n        render={(_, record) => <p>{record.user.phone}</p>}\n      />\n      <Column title=\"资金变动\" dataIndex=\"amount\" />\n      <Column title=\"余额\" dataIndex=\"blance\" />\n      <Column title=\"时间\" dataIndex=\"createdAt\" />\n      <Column title=\"描述\" dataIndex=\"description\" />\n    </Table>\n  );\n};\n\nexport default Financial;\n","import Axios from 'axios';\nimport { message } from 'antd';\n\nconst http = Axios.create({\n  baseURL: process.env.REACT_APP_API_SERVER,\n  withCredentials: true,\n});\n\nhttp.interceptors.request.use(\n  (config) => {\n    if (localStorage.__admin_token) {\n      config.headers.Authorization = 'Bearer ' + localStorage.__admin_token;\n    }\n    if (localStorage.i18nextLng) {\n      config.headers['Accept-Language'] = localStorage.i18nextLng;\n    }\n    return config;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\nhttp.interceptors.response.use(\n  (res) => {\n    if (res.data.message) {\n      message.success(res.data.message);\n    }\n    return res;\n  },\n  (err) => {\n\t\t\n\t\t\n    if (err.response.status === 401) {\n      localStorage.removeItem('__admin_token');\n\t\t\t\n      if (\n        window.location.pathname.indexOf('login') === -1 && \n\t\t\t\t\twindow.location.pathname.indexOf('register') === -1\n\t\t\t) {\n        window.location.hash = '/login';\n      }\n    }\n\n    if (err.response.data) {\n      message.error(err.response.data.message);\n      return Promise.reject(err);\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default http;\n","import http from './http'\n\n\nexport const LoginApi = (model) => http.post('/login', model)\nexport const RegisterApi = (model) => http.post('/register', model)\nexport const CaptchaApi = () => http.get('/../common/captcha')\n\nexport const DashBoardApi = () => http.get('/info/dashboard')\n\nexport const UserListApi = () => http.get('/user/list')\nexport const UserBanApi = (id) => http.get('/user/user/' + id)\nexport const UserEditApi = (model) => http.post('/user/user', model)\nexport const UserBankApi = () => http.get('/user/bank')\n\nexport const AdminApi = () => http.get('/user/admin')\nexport const AdminSaveApi = (model) => http.post('/user/admin', model)\nexport const AdminDelApi = (id) => http.delete('/user/admin/' + id)\n\nexport const RostateApi = () => http.get('/info/rotate')\nexport const RostateSaveApi = (model) => http.post('/info/rotate', model)\nexport const RostateDelApi = (id) => http.delete('/info/rotate/' + id)\n\nexport const PostApi = () => http.get('/info/post')\nexport const PostSaveApi = (model) => http.post('/info/post', model)\nexport const PostDelApi = (id) => http.delete('/info/post/' + id)\n\nexport const AboutApi = () => http.get('/info/about')\nexport const AboutSaveApi = (model) => http.post('/info/about', model)\n\nexport const CenterApi = () => http.get('/info/center')\nexport const CenterSaveApi = (model) => http.post('/info/center', model)\n\nexport const ShareApi = () => http.get('/info/share')\nexport const ShareSaveApi = (model) => http.post('/info/share', model)\n\nexport const ProductApi = () => http.get('/product')\nexport const ProductSaveApi = (model) => http.post('/product', model)\nexport const ProductDelApi = (id) => http.delete('/product/' + id)\n\nexport const RecordApi = () => http.get('/product/record')\n\nexport const FinancialApi = () => http.get('/price/financial')\nexport const RechageApi = () => http.get('/price/rechage')\n\nexport const WithdrawListApi = () => http.get('/price/withdraw')\nexport const WithdrawAllowApi = (model) => http.post('/price/withdraw', model)\nexport const WithdrawAllowHandlApi = (model) => http.put('/price/withdraw', model)\nexport const WithdrawDelApi = (id) => http.delete('/price/withdraw/' + id)\n\nexport const SetApi = (type) => http.get('/set/' + type)\nexport const SetSaveApi = (model) => http.post('/set', model)\n\n"],"names":["Column","Table","useState","tableData","setTableData","useEffect","FinancialApi","then","res","data","map","item","id","_id","slice","createdAt","replace","substr","length","dataSource","rowKey","title","render","_","record","user","phone","dataIndex","http","Axios","baseURL","process","withCredentials","interceptors","request","use","config","localStorage","__admin_token","headers","Authorization","i18nextLng","err","Promise","reject","response","message","status","removeItem","window","location","pathname","indexOf","hash","LoginApi","model","RegisterApi","CaptchaApi","DashBoardApi","UserListApi","UserBanApi","UserEditApi","UserBankApi","AdminApi","AdminSaveApi","AdminDelApi","RostateApi","RostateSaveApi","RostateDelApi","PostApi","PostSaveApi","PostDelApi","AboutApi","AboutSaveApi","CenterApi","CenterSaveApi","ShareApi","ShareSaveApi","ProductApi","ProductSaveApi","ProductDelApi","RecordApi","RechageApi","WithdrawListApi","WithdrawAllowApi","WithdrawAllowHandlApi","WithdrawDelApi","SetApi","type","SetSaveApi"],"sourceRoot":""}