{"version":3,"file":"static/js/622.623cfbad.chunk.js","mappings":"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","sources":["pages/Bank.jsx","utils/http.js","utils/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BankApi, BankEditApi } from 'utils/Api';\nimport {\n  Table,\n  Button,\n  message,\n  Modal,\n  Form,\n  Input,\n  InputNumber,\n} from 'antd';\nconst { Column } = Table;\n\nconst Bank = () => {\n  const { id } = useParams();\n  const [tableData, setTableData] = useState();\n  const [visible, setVisible] = useState(false);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    BankApi(id).then((res) => {\n      setTableData(res.data);\n    });\n  }, []);\n\n  const edit = (record) => {\n    form.setFieldsValue( record);\n    setVisible(true);\n  };\n\n  const onFinish = (value) => {\n    BankEditApi(value).then((res) => {\n      message.success('保存成功');\n      onCancel();\n      const swapData = tableData.filter((item) => item._id !== res.data._id);\n      setTableData([\n        ...swapData,\n        {\n          ...res.data,\n        },\n      ]);\n    });\n  };\n\n  const onCancel = () => {\n    setVisible(false);\n    form.resetFields();\n  };\n\n  return (\n    <>\n      <Table dataSource={tableData} rowKey=\"_id\">\n        <Column title=\"会员手机\" render={(_, record) => record.user.phone} />\n        <Column title=\"姓名\" dataIndex=\"name\" />\n        <Column title=\"银行名称\" render={(_, record) => record.bank.value} />\n        <Column title=\"银行帐号\" dataIndex=\"bankAccount\" />\n        <Column\n          title=\"操作\"\n          dataIndex=\"\"\n          render={(_, record) => (\n            <div className=\"flex gap-1\">\n              <Button type=\"primary\" onClick={() => edit(record)}>\n                修改\n              </Button>\n            </div>\n          )}\n        />\n      </Table>\n      <Modal\n        title=\"修改信息\"\n        centered\n        visible={visible}\n        onCancel={onCancel}\n        width={400}\n        keyboard={false}\n        maskClosable={false}\n        footer={[]}\n      >\n        <Form\n          labelCol={{ span: 4 }}\n          form={form}\n          name=\"control-hooks\"\n          onFinish={onFinish}\n        >\n          <Form.Item name=\"_id\" label=\"信息编号\">\n            <Input disabled />\n          </Form.Item>\n          <Form.Item name=\"name\" label=\"用户姓名\">\n            <Input/>\n          </Form.Item>\n          <Form.Item wrapperCol={{ span: 4, offset: 4 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              保存\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default Bank;\n","import Axios from 'axios';\nimport { message } from 'antd';\n\nconst http = Axios.create({\n  baseURL: process.env.REACT_APP_API_SERVER,\n  withCredentials: true,\n});\n\nhttp.interceptors.request.use(\n  (config) => {\n    if (localStorage.__admin_token) {\n      config.headers.Authorization = 'Bearer ' + localStorage.__admin_token;\n    }\n    if (localStorage.i18nextLng) {\n      config.headers['Accept-Language'] = localStorage.i18nextLng;\n    }\n    return config;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\nhttp.interceptors.response.use(\n  (res) => {\n    if (res.data.message) {\n      message.success(res.data.message);\n    }\n    return res;\n  },\n  (err) => {\n\t\t\n\t\t\n    if (err.response.status === 401) {\n      localStorage.removeItem('__admin_token');\n\t\t\t\n      if (\n        window.location.pathname.indexOf('login') === -1 && \n\t\t\t\t\twindow.location.pathname.indexOf('register') === -1\n\t\t\t) {\n        window.location.hash = '/login';\n      }\n    }\n\n    if (err.response.data) {\n      message.error(err.response.data.message);\n      return Promise.reject(err);\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default http;\n","import http from './http';\n\nexport const LoginApi = (model) => http.post('/public/login', model);\nexport const RegisterApi = (model) => http.post('/public/register', model);\nexport const CaptchaApi = () => http.get('/../common/captcha');\n\nexport const DashBoardApi = () => http.get('/info/dashboard');\n\nexport const UserListApi = () => http.get('/user');\nexport const UserBanApi = (id) => http.delete('/user/' + id);\n\nexport const WalletListApi = (id) => http.get('/wallet/' + id);\nexport const WalletEditApi = (model) => http.post('/wallet', model);\n\nexport const BankApi = (id) => http.get('/bank/' + id);\nexport const BankEditApi = (model) => http.post('/bank', model);\n\nexport const AdminApi = () => http.get('/user/admin');\nexport const AdminSaveApi = (model) => http.post('/user/admin', model);\nexport const AdminDelApi = (id) => http.delete('/user/admin/' + id);\n\nexport const RostateApi = () => http.get('/rotate');\nexport const RostateSaveApi = (model) => http.post('/rotate', model);\nexport const RostateDelApi = (id) => http.delete('/rotate/' + id);\n\nexport const PostApi = () => http.get('/post');\nexport const PostSaveApi = (model) => http.post('/post', model);\nexport const PostDelApi = (id) => http.delete('/post/' + id);\n\nexport const ProductApi = () => http.get('/product');\nexport const ProductSaveApi = (model) => http.post('/product', model);\nexport const ProductDelApi = (id) => http.delete('/product/' + id);\n\nexport const TransactionApi = () => http.get('/transaction');\n\nexport const FinancialApi = () => http.get('/finance');\nexport const RechageApi = () => http.get('/recharge');\nexport const WithdrawListApi = () => http.get('/withdraw');\nexport const WithdrawAllowApi = (model) => http.post('/withdraw', model);\nexport const WithdrawAllowHandlApi = (model) => http.put('/withdraw', model);\nexport const WithdrawDelApi = (id) => http.delete('/withdraw/' + id);\n\nexport const SetApi = (type) => http.get('/set/' + type);\nexport const SetSaveApi = (model) => http.post('/set', model);\n"],"names":["Column","Table","id","useParams","useState","tableData","setTableData","visible","setVisible","Form","form","useEffect","BankApi","then","res","data","onCancel","resetFields","dataSource","rowKey","title","render","_","record","user","phone","dataIndex","bank","value","className","type","onClick","setFieldsValue","edit","centered","width","keyboard","maskClosable","footer","labelCol","span","name","onFinish","BankEditApi","message","swapData","filter","item","_id","label","disabled","wrapperCol","offset","htmlType","http","Axios","baseURL","process","withCredentials","interceptors","request","use","config","localStorage","__admin_token","headers","Authorization","i18nextLng","err","Promise","reject","response","status","removeItem","window","location","pathname","indexOf","hash","LoginApi","model","RegisterApi","CaptchaApi","DashBoardApi","UserListApi","UserBanApi","WalletListApi","WalletEditApi","AdminApi","AdminSaveApi","AdminDelApi","RostateApi","RostateSaveApi","RostateDelApi","PostApi","PostSaveApi","PostDelApi","ProductApi","ProductSaveApi","ProductDelApi","TransactionApi","FinancialApi","RechageApi","WithdrawListApi","WithdrawAllowApi","WithdrawAllowHandlApi","WithdrawDelApi","SetApi","SetSaveApi"],"sourceRoot":""}